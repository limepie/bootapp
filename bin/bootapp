#!/usr/bin/env php
<?php
date_default_timezone_set('Asia/Seoul');

$loaded = false;

foreach ([__DIR__.'/../../../autoload.php', __DIR__.'/../vendor/autoload.php'] as $file) {
    if (file_exists($file)) {
        require $file;
        $loaded = true;
        break;
    }
}

if (!$loaded) {
    die(
        'You need to set up the project dependencies using the following commands:'.PHP_EOL.
        'wget http://getcomposer.org/composer.phar'.PHP_EOL.
        'php composer.phar install'.PHP_EOL
    );
}

echo <<<LOGO
 _                 _
| |__   ___   ___ | |_    ____ ____  ____
|  _ \ / _ \ / _ \| __|  / _  |  _ \|  _ \
| |_) | (_) | (_) | |_  | (_| | |_) | |_) |
|_.__/ \___/ \___/ \__|  \__,_| .__/| .__/  0.0.0
                              |_|   |_|


LOGO;

set_error_handler(function ($errno, $errstr, $errfile, $errline) {
    throw new \Peanut\Console\Exception("{$errstr} on {$errfile}:{$errline}");
});
try {
    $app = new \Peanut\Console\Application('Bootapp', '0.0.0');

    $app->option('verbose', ['require' => false, 'alias' => 'v|vv|vvv', 'value' => false]);

    $app->command(new \App\Controllers\Selfupdate());
    $app->command(new \App\Controllers\Up());
    $app->command(new \App\Controllers\Halt());

    $app->command(new \App\Controllers\Ls());
    $app->command(new \App\Controllers\Rm());

    $app->command(new \App\Controllers\Fix());
    $app->command(new \App\Controllers\Log());
    $app->command(new \App\Controllers\Inspect());
    $app->command(new \App\Controllers\Ssh());

    $app->command(new \App\Controllers\Task());
    $app->command(new \App\Controllers\Env());

    $app->command(new \App\Controllers\Pause());
    $app->command(new \App\Controllers\Unpause());

    $app->match();
} catch (\Peanut\Console\Exception $e) {
    print_r($e->getMessage());
}
